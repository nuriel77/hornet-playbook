[Unit]
Description=Hornet IOTA
After=docker.service
Requires=docker.service

[Service]
TimeoutStartSec=0
TimeoutStopSec={{ hornet_wait_stop_sec | default('1200') }}
Restart=no
EnvironmentFile=-{{ config_dir }}/hornet
ExecStartPre=-/bin/bash -c "/usr/bin/docker rm %p || /bin/true"
ExecStart=/usr/bin/docker run \
  --name %p \
  --net=host \
  --user={{ hornet_uid.stdout }} \
  --cap-drop=ALL \
  -v /etc/localtime:/etc/localtime:ro,Z \
  -v {{ hornet_db_path }}:/app/mainnetdb:rw,Z \
  -v {{ hornet_config }}:/app/config.json:ro,Z \
  -v {{ hornet_peers_config }}:/app/peering.json:rw,Z \
  -v {{ hornet_p2pstore_path }}:/app/p2pstore:rw,Z \
  -v {{ hornet_home_path }}/{{ hornet_profiles_config_file }}:/app/{{ hornet_profiles_config_file }}:ro,Z \
  -v {{ hornet_home_path }}/snapshot:/app/snapshot:rw,Z \
  -v {{ hornet_home_path }}/coordinator:/app/coordinator:rw,Z \
  -v {{ hornet_monitor_path }}/frontend:/app/tanglemonitor/frontend:ro,Z \
  -v {{ tanglevisualiser_path }}/webroot:/app/tanglevisualiser/webroot:ro,Z \
  --ulimit nofile={{ hornet_nofile_limit }}:{{ hornet_nofile_limit }} \
  $DOCKER_OPTS \
  ${HORNET_IMAGE}:${TAG} \
  $OPTIONS
ExecStop=/usr/bin/docker stop --time {{ hornet_wait_stop_sec | default('1200') }} %p
ExecReload=/usr/bin/docker restart --time {{ hornet_wait_stop_sec | default('1200') }} %p

[Install]
WantedBy=multi-user.target
