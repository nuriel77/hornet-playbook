# Configuration for comnet
#
# config.json
hornet_configuration:
  useProfile: auto
  httpAPI:
    excludeHealthCheckFromAuth: false
    basicAuth:
      enabled: false
      username: ''
      passwordHash: ''
      passwordSalt: ''
    permitRemoteAccess:
    - getNodeInfo
    - getBalances
    - checkConsistency
    - getTransactionsToApprove
    - getInclusionStates
    - getNodeAPIConfiguration
    - wereAddressesSpentFrom
    - broadcastTransactions
    - findTransactions
    - storeTransactions
    - getTrytes
    - attachToTangle
    - interruptAttachingToTangle
    whitelistedAddresses: []
    bindAddress: "127.0.0.1:{{ hornet_ports.api.port }}"
    limits:
      bodyLengthBytes: 1000000
      findTransactions: 100000
      getTrytes: 1000
      requestsList: 1000
  dashboard:
    bindAddress: "{{ hornet_graph_internal_address }}:{{ hornet_dashboard_internal_port }}"
    theme: default
    dev: false
    basicAuth:
      enabled: false
      username: ''
      passwordHash: ''
      passwordSalt: ''
  db:
    path: mainnetdb
    debug: false
  snapshots:
    loadType: local
    local:
      depth: 50
      intervalSynced: 200
      intervalUnsynced: 1000
      path: snapshot/export.bin
      downloadURLs:
      - https://ls.manapotion.io/comnet/export.bin
    global:
      path: snapshot/snapshotMainnet.txt
      spentAddressesPaths:
      - previousEpochsSpentAddresses1.txt
      - previousEpochsSpentAddresses2.txt
      - previousEpochsSpentAddresses3.txt
      index: 1050000
    pruning:
      enabled: true
      delay: 1000
  spentAddresses:
    enabled: true
  coordinator:
    address: YBWDHGHUEB9KSOPONTLTOSSKITIBE9MXPASCLREDNV9HEABYBPTHRQGWNJWQFSYAYZRDXXIOZHWBC9DWC
    securityLevel: 2
    merkleTreeDepth: 23
    mwm: 10
    stateFilePath: coordinator/state
    merkleTreeFilePath: coordinator/tree
    intervalSeconds: 60
    checkpointTransactions: 5
  network:
    preferIPv6: false
    gossip:
      bindAddress: "0.0.0.0:{{ hornet_ports.peering.port }}"
      reconnectAttemptIntervalSeconds: 60
    autopeering:
      bindAddress: "0.0.0.0:{{ hornet_ports.autopeering.port }}"
      runAsEntryNode: false
      entryNodes:
      - "iotaCrvEWGfaeA1HutcULjD4uZnPhEnD5xNGfGs8vhe@enter.comnet.thetangle.org:14647"
      - "GLZAWBGqvm6ZRT7jGMFAKyUJNPdvx4i5A1GPRZbGS6C9@enter.comnet.hornet.zone:14627"
      - "J1Hn5r9pS5FkLeYqXWstC2Zyjxj73grEWvjuene3qjM9@entrynode.comnet.tanglebay.org:14636"
      seed: ''
  tipsel:
    belowMaxDepthTransactionLimit: 10000
    maxDepth: 5
  warpsync:
    advancementRange: 50
  node:
    alias: ''
    showAliasInGetNodeInfo: false
    disablePlugins: "{{ hornet_disable_plugins }}"
    enablePlugins: "{{ hornet_enable_plugins }}"
  logger:
    level: info
    disableCaller: true
    encoding: console
    outputPaths:
    - stdout
  spammer:
    address: HORNET99INTEGRATED99SPAMMER999999999999999999999999999999999999999999999999999999
    depth: 1
    message: Spamming with HORNET tipselect, thank you for using HORNET playbook
    tag: HORNET99INTEGRATED99SPAMMER99PLAYBOOK99RULES
    cpuMaxUsage: 0.8
    tpsRateLimit: 0
    bundleSize: 1
    valueSpam: false
    workers: 0
  graph:
    webRootPath: tanglevisualiser/webroot
    domain: ''
    webSocket:
      uri: ''
    bindAddress: "{{ hornet_graph_internal_address }}:{{ hornet_graph_internal_port }}"
    networkName: meets HORNET
    explorerTxLink: http://localhost:8081/explorer/tx/
    explorerBundleLink: http://localhost:8081/explorer/bundle/
  monitor:
    tangleMonitorPath: tanglemonitor/frontend
    domain: ''
    initialTransactionsCount: 15000
    remoteApiPort: 4433
    apiBindAddress: "{{ hornet_monitor_internal_address }}:{{ hornet_monitor_api_port }}"
    webBindAddress: "{{ hornet_monitor_internal_address }}:{{ hornet_monitor_port }}"
    websocket:
      uri: ''
  mqtt:
    config: "{{ hornet_mqtt_config_file }}"
  zmq:
    bindAddress: 127.0.0.1:{{ hornet_ports.zmq.port }}
  profiling:
    bindAddress: 127.0.0.1:6060
  prometheus:
    bindAddress: 127.0.0.1:9312
    goMetrics: true
    processMetrics: true
    promhttpMetrics: true

#
# peers.json
# Example:
#  - identity: example1.neighbor.com:15600
#    preferIPv6: false
#    alias: first_node
#  - identity: example2.neighbor.com:15600
#    alias: second_node
#    preferIPv6: false
hornet_peers: []
hornet_accept_any_connection: "false"
hornet_max_peers: 5

#
# mqtt_config.json
mqtt_worker_number: 4096
mqtt_internal_port: "11883"
mqtt_internal_address: 127.0.0.1
mqtt_proxy_port: "{{ hornet_ports.mqtt.port }}"
mqtt_ws_path: /ws
mqtt_tls_enabled: "false"
mqtt_ca_file: tls/ca/cacert.pem
mqtt_cert_file: tls/server/cert.pem
mqtt_key_file: tls/server/key.pem

#
# Aliases used in generic roles (e.g. ansible-monitoring)
node_db_path: "{{ hornet_config.db.path }}"
node_zmq_port: "{{ hornet_ports.zmq.port }}"
node_enable_plugins: "{{ hornet_config.node.enablePlugins }}"
node_api_port: "{{ hornet_ports.api.port }}"
node_api_port_remote: "14267"
