- name: Ensure dependencies are installed
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - jq
      - ufw
      - wget
      - lsof
      - curl
      - pv
      - python-pip

- name: Add Docker apt key
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key
  ignore_errors: true

- name: Ensure curl is present (on older systems without SNI).
  package:
    name: curl
    state: present
  when: add_repository_key is failed

- name: Add Docker apt key (alternative for older systems without SNI).
  shell: "curl -sSL https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg | apt-key add -"
  args:
    warn: no
  when: add_repository_key is failed

- name: rasbpian override repository configuration
  set_fact:
    docker_apt_repository: "deb [arch={{ hornet_arch }}] https://download.docker.com/linux/raspbian {{ ansible_distribution_release }} {{ docker_build | default('stable') }}"
  when: ansible_lsb.id == 'Raspbian'

- name: architecture override repository configuration
  set_fact:
    docker_apt_repository: "deb [arch={{ hornet_arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_build | default('stable') }}"
  when: ansible_lsb.id != 'Raspbian'

- name: ensure old line with edge is gone
  lineinfile:
    state: absent
    path: '/etc/apt/sources.list.d/download_docker_com_linux_ubuntu.list'
    regexp: '^deb https://download.docker.com/linux/ubuntu bionic edge'

- name: Add Docker repository.
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: yes
