playbook_basename: hornet
hornet_repo_name: gohornet/hornet
hornet_git_url: "https://github.com/{{ hornet_repo_name }}.git"
hornet_releases_url: "https://api.github.com/repos/{{ hornet_repo_name }}/releases"
hornet_releases_download_url: "https://github.com/{{ hornet_repo_name }}/releases/download"
hornet_git_dest: /opt/hornet

# Docker image
hornet_image: gohornet/hornet
# Hornet version
hornet_version: latest

hornet_user: hornet
hornet_group: hornet
hornet_home_path: /var/lib/hornet
hornet_config: "{{ hornet_home_path }}/config.json"
hornet_peers_config: "{{ hornet_home_path }}/peering.json"
hornet_profiles_config_file: profiles.json
hornet_db_path: "{{ hornet_home_path }}/mainnetdb"
hornet_db_tar: "{{ hornet_home_path }}/snapshot/export.bin"
hornet_p2pstore_path: "{{ hornet_home_path }}/p2p"

# How long to wait (seconds) for hornet to
# gracefully stop. This applies for restart/stop.
hornet_timeout_stop: 900

# Ports used by hornet
# For now only peering port is not
# running behind a proxy. Therefore
# all the ports are not allowed to
# connected to, and are either
# served by a proxy or locally only.
hornet_ports:
  http:
    port: 80
    proto: tcp
    allow: yes
  dashboard:
    port: 443
    proto: tcp
    allow: yes
  peering:
    port: 15600
    proto: tcp
    allow: yes
  api:
    port: 14265
    proto: tcp
    allow: no
  zmq:
    port: 5556
    proto: tcp
    allow: no
  mqtt:
    port: 1883
    proto: tcp
    allow: no

# These can get overwritten by horc
# once any changes are applied.
hornet_disable_plugins:
- Spammer
- ZMQ
- MQTT
- Coordinator
hornet_enable_plugins:
- Prometheus

# Set openfiles limit
hornet_nofile_limit: "65535"

#
# Dashboard nginx
hornet_dashboard_proxy_port: "{{ hornet_ports.dashboard.port }}"
hornet_dashboard_internal_address: 127.0.0.1
hornet_dashboard_internal_port: "8087"
