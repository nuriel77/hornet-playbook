playbook_basename: hornet
hornet_repo_name: gohornet/hornet
hornet_git_url: "https://github.com/{{ hornet_repo_name }}.git"
hornet_releases_url: "https://api.github.com/repos/{{ hornet_repo_name }}/releases"
hornet_releases_download_url: "https://github.com/{{ hornet_repo_name }}/releases/download"
hornet_git_dest: /opt/hornet

# Docker image
hornet_image: gohornet/hornet
# Hornet version
hornet_version: latest

hornet_user: hornet
hornet_group: hornet
hornet_home_path: /var/lib/hornet
hornet_config: "{{ hornet_home_path }}/config.json"
hornet_peers_config: "{{ hornet_home_path }}/peering.json"
hornet_mqtt_config_file: mqtt_config.json
hornet_profiles_config_file: profiles.json
hornet_db_path: "{{ hornet_home_path }}/mainnetdb"
hornet_db_tar: "{{ hornet_home_path }}/snapshot/export.bin"
hornet_db_source: "https://ls.manapotion.io/export.bin"

# How long to wait (seconds) for hornet to
# gracefully stop. This applies for restart/stop.
hornet_timeout_stop: 900

# Neighbors
hornet_peers: []
#  - identity: example1.neighbor.com:15600
#    preferIPv6: false
#    alias: first_node
#  - identity: example2.neighbor.com:15600
#    alias: second_node
#    preferIPv6: false

# Hornet run profile (e.g. auto or light)
# 'light' will consume less memory.
hornet_profile: light

# Enable hornet API auth.
# The default node's username and password are used.
hornet_httpapi_basic_auth: false

# Hornet plugins
hornet_enable_plugins:
  - Autopeering
  - Prometheus

# By default disable all
hornet_disable_plugins:
  - ZeroMQ
  - Spammer
  - Monitor
  - MQTT
  - Graph

hornet_permit_remote_access_list:
  - getNodeInfo
  - getBalances
  - checkConsistency
  - getTransactionsToApprove
  - getInclusionStates
  - getNodeAPIConfiguration
  - wereAddressesSpentFrom
  - broadcastTransactions
  - findTransactions
  - storeTransactions
  - getTrytes
  - attachToTangle
  - interruptAttachingToTangle

# Unprivileged user to run hornet with
hornet_username: hornet

# Ports used by hornet
# For now only peering port is not
# running behind a proxy. Therefore
# all the ports are not allowed to
# connected to, and are either
# served by a proxy or locally only.
hornet_ports:
  peering:
    port: 15600
    proto: tcp
    allow: yes
  autopeering:
    port: 14626
    proto: udp
    allow: yes
  api:
    port: 14265
    proto: tcp
    allow: no
  graph:
    port: 8083
    proto: tcp
    allow: yes
  zmq:
    port: 5556
    proto: tcp
    allow: no
  mqtt:
    port: 1883
    proto: tcp
    allow: no
  dashboard:
    port: 8081
    proto: tcp
    allow: yes
  tanglemonitor:
    port: 4434
    proto: tcp
    allow: yes
  tanglemonitor_api:
    port: 4433
    proto: tcp
    allow: yes

# Hornet API port address bind.
# If you are using a proxy, leave
# this is as it is.
hornet_api_address: "127.0.0.1"

# The TCP port on which hornet listens for API calls and allows for light wallets to connect to
hornet_api_port: "{{ hornet_ports.api.port }}"

# The peering address to listen on (interface on your node)
# 0.0.0.0 means all interfaces
hornet_peering_address: "0.0.0.0"

# The TCP neighbor peering port
hornet_peering_port: "{{ hornet_ports.peering.port }}"

hornet_accept_any_connection: false

# Hornet autopeering port
hornet_network_autopeering_address: "0.0.0.0"
hornet_network_autopeering_port: "{{ hornet_ports.autopeering.port }}"

# Hornet max neighbors
hornet_max_peers: 5

# Hornet's API IP whitelist to bypass limitations
hornet_httpapi_whitelist: []

hornet_globalsnapshot_spentaddressespaths: 
  - previousEpochsSpentAddresses1.txt
  - previousEpochsSpentAddresses2.txt
  - previousEpochsSpentAddresses3.txt

hornet_network_entrynodes:
  - "LehlDBPJ6kfcfLOK6kAU4nD7B/BdR7SJhai7yFCbCCM=@enter.hornet.zone:14626"
  - "zEiNuQMDfZ6F8QDisa1ndX32ykBTyYCxbtkO0vkaWd0=@enter.manapotion.io:18626"

# Tanglemonitor ports external
# Those best be kept on these ports
# because the frontend has them hardcoded
hornet_monitor_port_ext: "{{ hornet_ports.tanglemonitor.port }}"
hornet_api_monitor_port_ext: "{{ hornet_ports.tanglemonitor_api.port }}"
tanglemonitor_internal_address: "127.0.0.1"

# Hornet ZMQ port
hornet_zmq_port: "{{ hornet_ports.zmq.port }}"

# Hornet ZMQ bind address
hornet_zmq_address: 127.0.0.1

# Set openfiles limit
hornet_nofile_limit: "65535"

# Exclude the commands below from the API.
# Applied only to connections other than localhost/127.0.0.1
# Note: if you are using haproxy, limits are set there.
hornet_remote_limit_api: "removeNeighbors, addNeighbors, getNeighbors"

# Dashboard config
# Keep the dashboard on 127.0.0.1 when running behind
# a proxy like nginx.
hornet_dashboard_internal_address: 127.0.0.1
hornet_dashboard_internal_port: "8087"
hornet_dashboard_proxy_port: "{{ hornet_ports.dashboard.port }}"

# Tangle Visualiser/Graph config
hornet_graph_internal_address: 127.0.0.1
hornet_graph_internal_port: "18083"
hornet_graph_proxy_port: "{{ hornet_ports.graph.port }}"
hornet_mqtt_ws_path: '/ws'

# MQTT config
hornet_mqtt_internal_address: 127.0.0.1
hornet_mqtt_internal_port: "11883"
hornet_mqtt_proxy_port: "{{ hornet_ports.mqtt.port }}"

# Only needs enabling if not served via nginx
hornet_dashboard_basic_auth: false

# Aliases used in generic roles (e.g. ansible-monitoring)
node_db_path: "{{ hornet_db_path }}"
node_zmq_port: "{{ hornet_zmq_port }}"
node_enable_plugins: "{{ hornet_enable_plugins }}"
node_api_port: "{{ hornet_api_port }}"
node_api_port_remote: "14267"
